<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>臭咸鱼的缺氧瓶</title>
  
  <subtitle>快给我氧气！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://chouxianyu.github.io/"/>
  <updated>2019-08-08T16:21:23.636Z</updated>
  <id>https://chouxianyu.github.io/</id>
  
  <author>
    <name>臭咸鱼</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>PAT乙级1033</title>
    <link href="https://chouxianyu.github.io/2019/08/09/PAT%E4%B9%99%E7%BA%A71033/"/>
    <id>https://chouxianyu.github.io/2019/08/09/PAT乙级1033/</id>
    <published>2019-08-08T16:20:38.000Z</published>
    <updated>2019-08-08T16:21:23.636Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h1><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805288530460672" target="_blank" rel="noopener">https://pintia.cn/problem-sets/994805260223102976/problems/994805288530460672</a></p><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>刚开始没有理解到，如果上档键坏的话，所有大写字母都不行（My bad），后来改代码思路就很乱，甚至还考虑过<code>_</code>和<code>+</code>是否输出之类的……所以理解题意很重要吧。这个题弄得我脑袋很累。</p><p>考虑到上档键坏的话，所有大写字母都不行之后，还是会有一个测试点不过。</p><p>另外有个坑是第一行可能是空行，即所有键都是可以使用的。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// PAT BasicLevel 1033</span></span><br><span class="line"><span class="comment">// https://pintia.cn/problem-sets/994805260223102976/problems/994805288530460672</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 用户输入的字符串、输出的字符串、坏掉的键（字符串形式）</span></span><br><span class="line">    <span class="built_in">string</span> strIn,wrongKeys;</span><br><span class="line">    getline(<span class="built_in">cin</span>, wrongKeys);</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; strIn;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 上档键（大写）是否可用</span></span><br><span class="line">    <span class="keyword">bool</span> upIsWrong = (wrongKeys.find(<span class="string">'+'</span>) == <span class="built_in">string</span>::npos) ? <span class="literal">false</span> : <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 生成输出字符串</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;strIn.length();++i)&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 处理坏掉的键导致对应键无法输出</span></span><br><span class="line">        <span class="keyword">if</span> (wrongKeys.find(<span class="built_in">toupper</span>(strIn[i]))!=<span class="built_in">string</span>::npos)&#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 处理上档键坏掉导致大写无法输出</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">isupper</span>(strIn[i]) &amp;&amp; upIsWrong)&#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 这个键没有问题</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; strIn[i];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//system("pause");</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>作者：<a href="https://github.com/chouxianyu" target="_blank" rel="noopener">@臭咸鱼</a></p><p>转载请注明出处：<a href="https://www.cnblogs.com/chouxianyu/" target="_blank" rel="noopener">https://www.cnblogs.com/chouxianyu/</a></p><p>欢迎讨论和交流!</p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目链接&quot;&gt;&lt;a href=&quot;#题目链接&quot; class=&quot;headerlink&quot; title=&quot;题目链接&quot;&gt;&lt;/a&gt;题目链接&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://pintia.cn/problem-sets/994805260223102976/pro
      
    
    </summary>
    
    
      <category term="PAT" scheme="https://chouxianyu.github.io/tags/PAT/"/>
    
      <category term="算法" scheme="https://chouxianyu.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>PAT乙级1032</title>
    <link href="https://chouxianyu.github.io/2019/08/08/PAT%E4%B9%99%E7%BA%A71032/"/>
    <id>https://chouxianyu.github.io/2019/08/08/PAT乙级1032/</id>
    <published>2019-08-08T10:31:55.000Z</published>
    <updated>2019-08-08T10:33:03.953Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h1><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805289432236032" target="_blank" rel="noopener">https://pintia.cn/problem-sets/994805260223102976/problems/994805289432236032</a></p><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>用数组的下标表示学校，数组元素表示分数。统计各校分数后，遍历求最大就好了。</p><p>做这道题遇到一个<code>memset</code>初始化数组元素的问题，具体见<a href="https://www.cnblogs.com/chouxianyu/p/11322984.html" target="_blank" rel="noopener">https://www.cnblogs.com/chouxianyu/p/11322984.html</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// PAT BasicLevel 1032</span></span><br><span class="line"><span class="comment">// https://pintia.cn/problem-sets/994805260223102976/problems/994805289432236032</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// n个参赛者</span></span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 最多n个学校</span></span><br><span class="line">    <span class="keyword">int</span>* scores=<span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 各学校（下标为0的学校是无效的学校）分数初始化为-1，因为是百分制，有可能所以参赛者都是零分且是同一个学校</span></span><br><span class="line">    <span class="built_in">memset</span>(scores, <span class="number">-1</span>, <span class="keyword">sizeof</span>(<span class="keyword">int</span>) * (n + <span class="number">1</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 统计n个学校分数</span></span><br><span class="line">    <span class="keyword">int</span> index,score;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; index &gt;&gt; score;</span><br><span class="line">        scores[index] += score;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 有效的学校最低分数是0，所以遍历后结果肯定不会是下标为0的那个学校</span></span><br><span class="line">    <span class="keyword">int</span> maxIndex=<span class="number">0</span>,maxScore=scores[maxIndex];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n+<span class="number">1</span>;++i)&#123;</span><br><span class="line">        <span class="comment">// 处理-1</span></span><br><span class="line">        scores[i]++;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 更新最大值</span></span><br><span class="line">        <span class="keyword">if</span> (scores[i] &gt; maxScore)&#123;</span><br><span class="line">            maxScore = scores[i];</span><br><span class="line">            maxIndex = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 输出结果</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; maxIndex &lt;&lt; <span class="string">' '</span> &lt;&lt; maxScore;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 释放内存</span></span><br><span class="line">    <span class="keyword">delete</span>[] scores;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//system("pause");</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>作者：<a href="https://github.com/chouxianyu" target="_blank" rel="noopener">@臭咸鱼</a></p><p>转载请注明出处：<a href="https://www.cnblogs.com/chouxianyu/" target="_blank" rel="noopener">https://www.cnblogs.com/chouxianyu/</a></p><p>欢迎讨论和交流!</p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目链接&quot;&gt;&lt;a href=&quot;#题目链接&quot; class=&quot;headerlink&quot; title=&quot;题目链接&quot;&gt;&lt;/a&gt;题目链接&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://pintia.cn/problem-sets/994805260223102976/pro
      
    
    </summary>
    
    
      <category term="PAT" scheme="https://chouxianyu.github.io/tags/PAT/"/>
    
      <category term="算法" scheme="https://chouxianyu.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>memset初始化数组的坑</title>
    <link href="https://chouxianyu.github.io/2019/08/08/memset%E5%88%9D%E5%A7%8B%E5%8C%96%E6%95%B0%E7%BB%84%E7%9A%84%E5%9D%91/"/>
    <id>https://chouxianyu.github.io/2019/08/08/memset初始化数组的坑/</id>
    <published>2019-08-08T10:27:54.000Z</published>
    <updated>2019-08-08T10:30:32.280Z</updated>
    
    <content type="html"><![CDATA[<p><code>memset</code>函数常被我们用来初始化数组，然而有个坑可能会被我们踩到。</p><h1 id="静态数组初始化"><a href="#静态数组初始化" class="headerlink" title="静态数组初始化"></a>静态数组初始化</h1><p>一般情形是这样的：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 静态数组arr</span></span><br><span class="line">    <span class="keyword">int</span> arr[<span class="number">10</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 将数组所有元素初始化为0</span></span><br><span class="line">    <span class="built_in">memset</span>(arr,<span class="number">0</span>,<span class="keyword">sizeof</span>(arr));</span><br><span class="line">        </span><br><span class="line">   <span class="comment">// 遍历输出数组元素</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;++i)&#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; arr[i] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样做是正确的，通过输出可以看到正确结果。</p><p>注意：这份代码中<code>arr</code>是个静态数组。</p><h1 id="动态数组初始化"><a href="#动态数组初始化" class="headerlink" title="动态数组初始化"></a>动态数组初始化</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 动态数组arr</span></span><br><span class="line">    <span class="keyword">int</span>* arr=<span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">10</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 将数组所有元素初始化为0</span></span><br><span class="line">    <span class="built_in">memset</span>(arr,<span class="number">0</span>,<span class="keyword">sizeof</span>(arr));</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 遍历输出数组元素</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;++i)&#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; arr[i] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这份代码运行后，我们发现<code>memset</code>并没有把数组元素全部初始化为0。</p><p>注意：<code>arr</code>是个动态数组</p><p><strong>原因如下</strong>：</p><p>我们可以在上面两份代码中输出<code>sizeof(arr)</code>，可以发现结果是不一样的。</p><p>因为在第一份代码中<code>arr</code>代表一个数组，第二份代码中<code>arr</code>代表一个指针。（关于<strong>数组名是什么</strong>这个问题可以参考我的另一篇文章：<a href="https://www.cnblogs.com/chouxianyu/p/11322951.html，其实这个问题我觉得是编译原理应该会学到的）" target="_blank" rel="noopener">https://www.cnblogs.com/chouxianyu/p/11322951.html，其实这个问题我觉得是编译原理应该会学到的）</a></p><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p>初始化数组（静态动态均可）时，把代码改成<code>memset(arr,0,sizeof(int)*10);</code>，<code>int</code>是数组元素的类型，<code>10</code>是数组元素个数。</p><hr><p>作者：<a href="https://github.com/chouxianyu" target="_blank" rel="noopener">@臭咸鱼</a></p><p>转载请注明出处：<a href="https://www.cnblogs.com/chouxianyu/" target="_blank" rel="noopener">https://www.cnblogs.com/chouxianyu/</a></p><p>欢迎讨论和交流!</p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;code&gt;memset&lt;/code&gt;函数常被我们用来初始化数组，然而有个坑可能会被我们踩到。&lt;/p&gt;
&lt;h1 id=&quot;静态数组初始化&quot;&gt;&lt;a href=&quot;#静态数组初始化&quot; class=&quot;headerlink&quot; title=&quot;静态数组初始化&quot;&gt;&lt;/a&gt;静态数组初始化&lt;/h
      
    
    </summary>
    
    
      <category term="C/C++" scheme="https://chouxianyu.github.io/tags/C-C/"/>
    
      <category term="数组" scheme="https://chouxianyu.github.io/tags/%E6%95%B0%E7%BB%84/"/>
    
      <category term="Bug" scheme="https://chouxianyu.github.io/tags/Bug/"/>
    
  </entry>
  
  <entry>
    <title>PAT乙级1031</title>
    <link href="https://chouxianyu.github.io/2019/08/07/PAT%E4%B9%99%E7%BA%A71031/"/>
    <id>https://chouxianyu.github.io/2019/08/07/PAT乙级1031/</id>
    <published>2019-08-07T15:43:16.000Z</published>
    <updated>2019-08-07T15:47:04.177Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h1><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805290334011392" target="_blank" rel="noopener">https://pintia.cn/problem-sets/994805260223102976/problems/994805290334011392</a></p><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>emmm。对于每个身份证号，判断前17位是否合法，并计算其与对应权重积之和，最后判断校验位是否合法。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// PAT BasicLevel 1031</span></span><br><span class="line"><span class="comment">// https://pintia.cn/problem-sets/994805260223102976/problems/994805290334011392</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 正确校验码</span></span><br><span class="line">    <span class="keyword">char</span> M[] = &#123; <span class="string">'1'</span>,<span class="string">'0'</span>,<span class="string">'X'</span>,<span class="string">'9'</span>,<span class="string">'8'</span>,<span class="string">'7'</span>,<span class="string">'6'</span>,<span class="string">'5'</span>,<span class="string">'4'</span>,<span class="string">'3'</span>,<span class="string">'2'</span>&#125;;</span><br><span class="line">    <span class="comment">// 前17位的比重</span></span><br><span class="line">    <span class="keyword">int</span> weight[] = &#123;<span class="number">7</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">2</span>&#125;;</span><br><span class="line">    <span class="comment">// 身份证号个数</span></span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 前17位乘以权重之和</span></span><br><span class="line">    <span class="keyword">int</span> sum;</span><br><span class="line">    <span class="comment">// 合法身份证号的个数</span></span><br><span class="line">    <span class="keyword">int</span> legalCount=<span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 当前身份证号是否合法</span></span><br><span class="line">    <span class="keyword">bool</span> isLegal;</span><br><span class="line">    <span class="comment">// 当前身份证号</span></span><br><span class="line">    <span class="built_in">string</span> str;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取每个身份证号并判断</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i)&#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; str;</span><br><span class="line">        <span class="comment">// 初始化</span></span><br><span class="line">        sum=<span class="number">0</span>;</span><br><span class="line">        isLegal=<span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 计算前17位乘以权重之和并判断前17位合法性</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">17</span>;++i)&#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">isdigit</span>(str[i]))&#123;</span><br><span class="line">                sum += (str[i] - <span class="string">'0'</span>)*weight[i];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 出现非数字，非法，结束sum的计算</span></span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                isLegal=<span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果前17位合法，判断校验码是否合法</span></span><br><span class="line">        <span class="keyword">if</span>(isLegal)&#123;</span><br><span class="line">            isLegal = (M[sum % <span class="number">11</span>]==str[<span class="number">17</span>]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 身份证号非法则输出</span></span><br><span class="line">        <span class="keyword">if</span>(!isLegal)&#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; str &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 合法则计数</span></span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            legalCount++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 全部身份证号合法</span></span><br><span class="line">    <span class="keyword">if</span>(legalCount==n)&#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"All passed"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//system("pause");</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>作者：<a href="https://github.com/chouxianyu" target="_blank" rel="noopener">@臭咸鱼</a></p><p>转载请注明出处：<a href="https://www.cnblogs.com/chouxianyu/" target="_blank" rel="noopener">https://www.cnblogs.com/chouxianyu/</a></p><p>欢迎讨论和交流!</p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目链接&quot;&gt;&lt;a href=&quot;#题目链接&quot; class=&quot;headerlink&quot; title=&quot;题目链接&quot;&gt;&lt;/a&gt;题目链接&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://pintia.cn/problem-sets/994805260223102976/pro
      
    
    </summary>
    
    
      <category term="PAT" scheme="https://chouxianyu.github.io/tags/PAT/"/>
    
      <category term="算法" scheme="https://chouxianyu.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>PAT乙级1030</title>
    <link href="https://chouxianyu.github.io/2019/08/07/PAT%E4%B9%99%E7%BA%A71030/"/>
    <id>https://chouxianyu.github.io/2019/08/07/PAT乙级1030/</id>
    <published>2019-08-07T14:51:30.000Z</published>
    <updated>2019-08-07T14:52:50.140Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h1><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805292322111488" target="_blank" rel="noopener">https://pintia.cn/problem-sets/994805260223102976/problems/994805292322111488</a></p><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>emm刚开始思路有点错误，我直接将从小到大排序后的数列首个元素作为数列的最小值，但其实不是，数列第一个元素的不同可能会导致更大的完美数列长度。(参考链接：<a href="https://blog.csdn.net/chenyvye/article/details/78701846" target="_blank" rel="noopener">https://blog.csdn.net/chenyvye/article/details/78701846</a>)</p><p>要注意的有三点：</p><ol><li>就是上边我错的那个</li><li>用<code>long long</code>类型保存这些整数（$10^9$）</li><li>移动序列时序列首位直接设为<code>i+maxLen</code></li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// PAT BasicLevel 1030</span></span><br><span class="line"><span class="comment">// https://pintia.cn/problem-sets/994805260223102976/problems/994805291311284224</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 获取n和p</span></span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> p;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; p;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 获取数列</span></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> *nums = <span class="keyword">new</span> <span class="keyword">long</span> <span class="keyword">long</span>[n];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i)&#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; nums[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 排序</span></span><br><span class="line">sort(nums + <span class="number">0</span>, nums + n);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 寻找完美数列最大长度</span></span><br><span class="line"><span class="keyword">int</span> j,maxLen=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)&#123;</span><br><span class="line"><span class="keyword">for</span>(j=i+maxLen;j&lt;n;++j)&#123;<span class="comment">// 至少要比之前求出来的最大长度长，所以j初始化为i+maxLen</span></span><br><span class="line"><span class="keyword">if</span> (nums[j] &lt;= nums[i] * p)&#123;</span><br><span class="line"><span class="comment">// 更新最长长度</span></span><br><span class="line"><span class="keyword">if</span> (j - i + <span class="number">1</span>&gt;maxLen)&#123;</span><br><span class="line">maxLen = j - i + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 出现非完美数列，之后也一定都是非完美数列，所以直接跳出循环</span></span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 输出结果</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; maxLen;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 释放内存</span></span><br><span class="line">    <span class="keyword">delete</span>[] nums;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//system("pause");</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>作者：<a href="https://github.com/chouxianyu" target="_blank" rel="noopener">@臭咸鱼</a></p><p>转载请注明出处：<a href="https://www.cnblogs.com/chouxianyu/" target="_blank" rel="noopener">https://www.cnblogs.com/chouxianyu/</a></p><p>欢迎讨论和交流!</p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目链接&quot;&gt;&lt;a href=&quot;#题目链接&quot; class=&quot;headerlink&quot; title=&quot;题目链接&quot;&gt;&lt;/a&gt;题目链接&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://pintia.cn/problem-sets/994805260223102976/pro
      
    
    </summary>
    
    
      <category term="PAT" scheme="https://chouxianyu.github.io/tags/PAT/"/>
    
      <category term="算法" scheme="https://chouxianyu.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>PAT乙级1029</title>
    <link href="https://chouxianyu.github.io/2019/08/07/PAT%E4%B9%99%E7%BA%A71029/"/>
    <id>https://chouxianyu.github.io/2019/08/07/PAT乙级1029/</id>
    <published>2019-08-07T14:51:21.000Z</published>
    <updated>2019-08-07T14:52:44.831Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h1><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805292322111488" target="_blank" rel="noopener">https://pintia.cn/problem-sets/994805260223102976/problems/994805292322111488</a></p><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>思路：</p><p>可以想到，没有坏键的话就是两个字符串是一样的。所以我们按下标进行比较，发现不一样的就是坏掉的，然后在错误字符串的该位置添加一个字符，以确保两字符串下标对应。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// PAT BasicLevel 1029</span></span><br><span class="line"><span class="comment">// https://pintia.cn/problem-sets/994805260223102976/problems/994805292322111488</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 正确和错误的字符串</span></span><br><span class="line">    <span class="built_in">string</span> right,wrong;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; right &gt;&gt; wrong;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 坏掉的键</span></span><br><span class="line">    <span class="built_in">string</span> wrongKeys=<span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 寻找坏掉的键</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;right.length();++i)&#123;</span><br><span class="line">        <span class="keyword">if</span> (right[i] != wrong[i])&#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 在wrong里占个位子，更新下标</span></span><br><span class="line">            wrong.insert(wrong.begin() + i, <span class="string">'#'</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 处理丢失的字符（小写转大写）</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">islower</span>(right[i]))&#123;</span><br><span class="line">                right[i]-=<span class="number">32</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 记录新发现的未重复的坏键</span></span><br><span class="line">            <span class="keyword">if</span>(wrongKeys.find(right[i])==wrongKeys.npos)&#123;</span><br><span class="line">                wrongKeys+=right[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 输出结果</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; wrongKeys;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//system("pause");</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>作者：<a href="https://github.com/chouxianyu" target="_blank" rel="noopener">@臭咸鱼</a></p><p>转载请注明出处：<a href="https://www.cnblogs.com/chouxianyu/" target="_blank" rel="noopener">https://www.cnblogs.com/chouxianyu/</a></p><p>欢迎讨论和交流!</p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目链接&quot;&gt;&lt;a href=&quot;#题目链接&quot; class=&quot;headerlink&quot; title=&quot;题目链接&quot;&gt;&lt;/a&gt;题目链接&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://pintia.cn/problem-sets/994805260223102976/pro
      
    
    </summary>
    
    
      <category term="PAT" scheme="https://chouxianyu.github.io/tags/PAT/"/>
    
      <category term="算法" scheme="https://chouxianyu.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>PAT乙级1028</title>
    <link href="https://chouxianyu.github.io/2019/08/07/PAT%E4%B9%99%E7%BA%A71028/"/>
    <id>https://chouxianyu.github.io/2019/08/07/PAT乙级1028/</id>
    <published>2019-08-07T14:51:08.000Z</published>
    <updated>2019-08-07T14:52:39.422Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h1><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805293282607104" target="_blank" rel="noopener">https://pintia.cn/problem-sets/994805260223102976/problems/994805293282607104</a></p><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>这题跟那个德才论（PAT乙级1015）什么的差不多。</p><p>因为我用了string和algorithm，所以整个代码实现比较简单。</p><p>值得注意的的是，刚开始第3个测试点没过，报错<strong>Segmentation fault</strong>。</p><p>网上查题解后，发现还是边界情况的问题（当所有输入都非法时就会数组越界，所以特殊处理一下即可，参考链接：<a href="https://blog.csdn.net/daniel960601/article/details/55261196）" target="_blank" rel="noopener">https://blog.csdn.net/daniel960601/article/details/55261196）</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// PAT BasicLevel 1028</span></span><br><span class="line"><span class="comment">// https://pintia.cn/problem-sets/994805260223102976/problems/994805293282607104</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">string</span> name;</span><br><span class="line">    <span class="built_in">string</span> birthday;</span><br><span class="line">    Person(<span class="built_in">string</span> name, <span class="built_in">string</span> birthday)&#123;</span><br><span class="line">        <span class="keyword">this</span>-&gt;name = name;</span><br><span class="line">        <span class="keyword">this</span>-&gt;birthday = birthday;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">personCmp</span><span class="params">(Person &amp;p1, Person &amp;p2)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 人数</span></span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt;n;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 最早日期和最晚日期</span></span><br><span class="line">    <span class="built_in">string</span> earliest = <span class="string">"1814/09/06"</span>;</span><br><span class="line">    <span class="built_in">string</span> latest = <span class="string">"2014/09/06"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取人的信息</span></span><br><span class="line">    <span class="built_in">vector</span>&lt;Person&gt; personVec;</span><br><span class="line">    <span class="built_in">string</span> name,birthday;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i)&#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; name &gt;&gt; birthday;</span><br><span class="line">        <span class="keyword">if</span> (birthday &gt;= earliest &amp;&amp; birthday&lt;= latest)&#123;</span><br><span class="line">            personVec.push_back(Person(name,birthday));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 输出结果</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; personVec.size();</span><br><span class="line">    <span class="keyword">if</span> (personVec.size() &gt; <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="comment">// 对所有人进行排序</span></span><br><span class="line">        sort(personVec.begin(), personVec.end(), personCmp);</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">' '</span> &lt;&lt; personVec.front().name &lt;&lt; <span class="string">' '</span> &lt;&lt; personVec.back().name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//system("pause");</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">personCmp</span><span class="params">(Person &amp;p1, Person &amp;p2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 生日 升序（生日从小到大就是年龄从大到小）</span></span><br><span class="line">    <span class="keyword">return</span> p1.birthday &lt; p2.birthday; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>作者：<a href="https://github.com/chouxianyu" target="_blank" rel="noopener">@臭咸鱼</a></p><p>转载请注明出处：<a href="https://www.cnblogs.com/chouxianyu/" target="_blank" rel="noopener">https://www.cnblogs.com/chouxianyu/</a></p><p>欢迎讨论和交流!</p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目链接&quot;&gt;&lt;a href=&quot;#题目链接&quot; class=&quot;headerlink&quot; title=&quot;题目链接&quot;&gt;&lt;/a&gt;题目链接&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://pintia.cn/problem-sets/994805260223102976/pro
      
    
    </summary>
    
    
      <category term="PAT" scheme="https://chouxianyu.github.io/tags/PAT/"/>
    
      <category term="算法" scheme="https://chouxianyu.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>PAT乙级1027</title>
    <link href="https://chouxianyu.github.io/2019/08/07/PAT%E4%B9%99%E7%BA%A71027/"/>
    <id>https://chouxianyu.github.io/2019/08/07/PAT乙级1027/</id>
    <published>2019-08-07T14:51:02.000Z</published>
    <updated>2019-08-07T14:52:33.121Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h1><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805294251491328" target="_blank" rel="noopener">https://pintia.cn/problem-sets/994805260223102976/problems/994805294251491328</a></p><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>主要有两个内容：</p><ol><li>获取第一行（最长行）字符的个数。这个与一般的菱形打印不同，该题的字符不一定用完。</li><li>通过循环输出空格与字符（末尾空格就不用输出了）</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// PAT BasicLevel 1027</span></span><br><span class="line"><span class="comment">// https://pintia.cn/problem-sets/994805260223102976/problems/994805294251491328</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getLineMaxCount</span><span class="params">(<span class="keyword">int</span> maxNum)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 字符可用数量及字符</span></span><br><span class="line">    <span class="keyword">int</span> n;<span class="keyword">char</span> c;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; c;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取第一行字符的个数</span></span><br><span class="line">    <span class="keyword">int</span> maxNum = getLineMaxCount(n);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 已输出字符个数</span></span><br><span class="line">    <span class="keyword">int</span> count=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 当前行输出字符个数</span></span><br><span class="line">    <span class="keyword">int</span> num = maxNum;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 输出上半部分</span></span><br><span class="line">    <span class="keyword">while</span>(num&gt;<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="comment">// 输出空格</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;(maxNum-num)/<span class="number">2</span>;++i)&#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">' '</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 输出字符</span></span><br><span class="line">        count+=num;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;num;++i)&#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; c;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 换行</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        num-=<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(num&lt;=maxNum)&#123;</span><br><span class="line">        <span class="comment">// 输出空格</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; (maxNum - num) / <span class="number">2</span>; ++i)&#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">' '</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 输出字符</span></span><br><span class="line">        count+=num;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; num; ++i)&#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; c;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 换行</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        num += <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 输出剩余字符个数</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; n-count;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//system("pause");</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 根据字符可用数量获取第一行字符个数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getLineMaxCount</span><span class="params">(<span class="keyword">int</span> maxNum)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">-1</span>,count=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (sum + count * <span class="number">2</span> &lt;= maxNum)&#123;</span><br><span class="line">        sum += count * <span class="number">2</span>;</span><br><span class="line">        count += <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> count<span class="number">-2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>作者：<a href="https://github.com/chouxianyu" target="_blank" rel="noopener">@臭咸鱼</a></p><p>转载请注明出处：<a href="https://www.cnblogs.com/chouxianyu/" target="_blank" rel="noopener">https://www.cnblogs.com/chouxianyu/</a></p><p>欢迎讨论和交流!</p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目链接&quot;&gt;&lt;a href=&quot;#题目链接&quot; class=&quot;headerlink&quot; title=&quot;题目链接&quot;&gt;&lt;/a&gt;题目链接&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://pintia.cn/problem-sets/994805260223102976/pro
      
    
    </summary>
    
    
      <category term="PAT" scheme="https://chouxianyu.github.io/tags/PAT/"/>
    
      <category term="算法" scheme="https://chouxianyu.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>PAT乙级1026</title>
    <link href="https://chouxianyu.github.io/2019/08/07/PAT%E4%B9%99%E7%BA%A71026/"/>
    <id>https://chouxianyu.github.io/2019/08/07/PAT乙级1026/</id>
    <published>2019-08-07T14:50:55.000Z</published>
    <updated>2019-08-07T14:52:26.572Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h1><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805295203598336" target="_blank" rel="noopener">https://pintia.cn/problem-sets/994805260223102976/problems/994805295203598336</a></p><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>就只有一个四舍五入需要注意一下，其他的没啥难度，都是简单的运算而已……</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// PAT BasicLevel 1026</span></span><br><span class="line"><span class="comment">// https://pintia.cn/problem-sets/994805260223102976/problems/994805295203598336</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CLK_TCK 100</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 获取C1和C2，并计算时间差（不足一秒进行四舍五入）</span></span><br><span class="line">    <span class="keyword">int</span> c1,c2;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; c1 &gt;&gt; c2;</span><br><span class="line">    <span class="keyword">int</span> time = (c2 - c1)*<span class="number">1.0</span>/CLK_TCK+<span class="number">0.5</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 计算小时、分钟、秒</span></span><br><span class="line">    <span class="keyword">int</span> hour=time/<span class="number">3600</span>;</span><br><span class="line">    time%=<span class="number">3600</span>;</span><br><span class="line">    <span class="keyword">int</span> min=time/<span class="number">60</span>;</span><br><span class="line">    <span class="keyword">int</span> sec=time%<span class="number">60</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 按格式输出结果</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%02d:%02d:%02d"</span>,hour,min,sec);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//system("pause");</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>作者：<a href="https://github.com/chouxianyu" target="_blank" rel="noopener">@臭咸鱼</a></p><p>转载请注明出处：<a href="https://www.cnblogs.com/chouxianyu/" target="_blank" rel="noopener">https://www.cnblogs.com/chouxianyu/</a></p><p>欢迎讨论和交流!</p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目链接&quot;&gt;&lt;a href=&quot;#题目链接&quot; class=&quot;headerlink&quot; title=&quot;题目链接&quot;&gt;&lt;/a&gt;题目链接&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://pintia.cn/problem-sets/994805260223102976/pro
      
    
    </summary>
    
    
      <category term="PAT" scheme="https://chouxianyu.github.io/tags/PAT/"/>
    
      <category term="算法" scheme="https://chouxianyu.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>PAT乙级1025</title>
    <link href="https://chouxianyu.github.io/2019/08/06/PAT%E4%B9%99%E7%BA%A71025/"/>
    <id>https://chouxianyu.github.io/2019/08/06/PAT乙级1025/</id>
    <published>2019-08-06T13:31:39.000Z</published>
    <updated>2019-08-06T13:32:12.405Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h1><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805296180871168" target="_blank" rel="noopener">https://pintia.cn/problem-sets/994805260223102976/problems/994805296180871168</a></p><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>第一遍没有全部AC，最后1个测试点没过，原因是题目给的结点中有可能有无效结点，所以需要重新统计节点个数。（参考链接：<a href="https://blog.csdn.net/m0_37285185/article/details/68936043" target="_blank" rel="noopener">https://blog.csdn.net/m0_37285185/article/details/68936043</a>）</p><p>修改后全部都AC了。</p><p>整体的思路是以地址为键形成一个map，根据从第一个结点开始遍历，统计出有效结点的地址顺序（存储在数组中），最后利用<code>reverse</code>函数将顺序反转，最后将反转的链表输出。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// PAT BasicLevel 1025</span></span><br><span class="line"><span class="comment">// https://pintia.cn/problem-sets/994805260223102976/problems/994805296180871168</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Node</span>&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">int</span> address;</span><br><span class="line">    <span class="keyword">int</span> data;</span><br><span class="line">    <span class="keyword">int</span> next;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 因为使用map，所以需要提供一个无参构造</span></span><br><span class="line">    Node()&#123;&#125;;</span><br><span class="line"></span><br><span class="line">    Node(<span class="keyword">int</span> address,<span class="keyword">int</span> data,<span class="keyword">int</span> next)&#123;</span><br><span class="line">        <span class="keyword">this</span>-&gt;address = address;</span><br><span class="line">        <span class="keyword">this</span>-&gt;data = data;</span><br><span class="line">        <span class="keyword">this</span>-&gt;next = next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%05d"</span>, address);</span><br><span class="line">        <span class="built_in">cout</span>  &lt;&lt; <span class="string">' '</span> &lt;&lt; data &lt;&lt; <span class="string">' '</span>;</span><br><span class="line">        <span class="keyword">if</span>(next==<span class="number">-1</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,next);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%05d\n"</span>, next);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 获取n、k和首结点地址</span></span><br><span class="line">    <span class="keyword">int</span> n, k, head;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; head &gt;&gt; n &gt;&gt; k;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 利用map模拟链表，获取用户输入的结点</span></span><br><span class="line">    <span class="keyword">int</span> address,data,next;</span><br><span class="line">    <span class="built_in">map</span>&lt;<span class="keyword">int</span>,Node&gt; nodes;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i)&#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; address &gt;&gt; data &gt;&gt; next;</span><br><span class="line">        nodes[address]=Node(address,data,next);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取结点地址的顺序并重新统计结点个数去除无效顶点</span></span><br><span class="line">    <span class="keyword">int</span> * addressArr=<span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">    addressArr[<span class="number">0</span>] = head;</span><br><span class="line">    address = nodes[head].next;</span><br><span class="line">    <span class="keyword">int</span> nodeCount=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(address!=<span class="number">-1</span>)&#123;</span><br><span class="line">        addressArr[nodeCount]=address;</span><br><span class="line">        nodeCount++;</span><br><span class="line">        address = nodes[address].next;</span><br><span class="line">    &#125;</span><br><span class="line">    n=nodeCount;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将结点地址的顺序进行反转</span></span><br><span class="line">    <span class="keyword">if</span> (k &gt; <span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">int</span> *p = addressArr;</span><br><span class="line">        <span class="keyword">while</span> ((addressArr + n) - p &gt;= k)</span><br><span class="line">        &#123;</span><br><span class="line">            reverse(p, p + k);</span><br><span class="line">            p += k;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 更新各结点的next</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n<span class="number">-1</span>;++i)&#123;</span><br><span class="line">        nodes[addressArr[i]].next=addressArr[i+<span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    nodes[addressArr[n - <span class="number">1</span>]].next=<span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 输出反转后的链表</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)&#123;</span><br><span class="line">        nodes[addressArr[i]].print();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 释放内存</span></span><br><span class="line">    <span class="keyword">delete</span>[] addressArr;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//system("pause");</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>作者：<a href="https://github.com/chouxianyu" target="_blank" rel="noopener">@臭咸鱼</a></p><p>转载请注明出处：<a href="https://www.cnblogs.com/chouxianyu/" target="_blank" rel="noopener">https://www.cnblogs.com/chouxianyu/</a></p><p>欢迎讨论和交流!</p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目链接&quot;&gt;&lt;a href=&quot;#题目链接&quot; class=&quot;headerlink&quot; title=&quot;题目链接&quot;&gt;&lt;/a&gt;题目链接&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://pintia.cn/problem-sets/994805260223102976/pro
      
    
    </summary>
    
    
      <category term="PAT" scheme="https://chouxianyu.github.io/tags/PAT/"/>
    
      <category term="算法" scheme="https://chouxianyu.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>PAT乙级1024</title>
    <link href="https://chouxianyu.github.io/2019/08/06/PAT%E4%B9%99%E7%BA%A71024/"/>
    <id>https://chouxianyu.github.io/2019/08/06/PAT乙级1024/</id>
    <published>2019-08-06T13:31:25.000Z</published>
    <updated>2019-08-06T13:32:03.342Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h1><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805297229447168" target="_blank" rel="noopener">https://pintia.cn/problem-sets/994805260223102976/problems/994805297229447168</a></p><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>第一遍也是没有全部AC，有3个测试点没过，原因如下：</p><ol><li>没有处理指数为0的情况</li><li>指数为正时，没有处理不需补充0而需插入小数点的情况。（经过<a href="https://blog.csdn.net/whenever5225/article/details/90454014" target="_blank" rel="noopener">https://blog.csdn.net/whenever5225/article/details/90454014</a>提示才知道的）</li></ol><p>修改后全部都AC了。</p><p>整体的思路是获取整数和小数数值部分，然后获取指数，最后进行小数点的移动。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// PAT BasicLevel 1024</span></span><br><span class="line"><span class="comment">// https://pintia.cn/problem-sets/994805260223102976/problems/994805297229447168</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getExponent</span><span class="params">(<span class="built_in">string</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 原始字符串和结果</span></span><br><span class="line">    <span class="built_in">string</span> str,result;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; str;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取结果的符号</span></span><br><span class="line">    <span class="built_in">string</span> flag = (str[<span class="number">0</span>] == <span class="string">'-'</span> ? <span class="string">"-"</span> : <span class="string">""</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// E在原始字符串中的下标</span></span><br><span class="line">    <span class="keyword">int</span> eIndex = str.find_last_of(<span class="string">'E'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获得指数的值</span></span><br><span class="line">    <span class="keyword">int</span> exponent = getExponent(str.substr(eIndex + <span class="number">1</span>, str.length()));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 从原始字符串获取整数和小数部分的数值，现在小数点在result中的下标为1</span></span><br><span class="line">    result = str[<span class="number">1</span>]+str.substr(<span class="number">3</span>, eIndex<span class="number">-3</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 根据指数进行小数点的移动</span></span><br><span class="line">    <span class="keyword">if</span>(exponent&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="comment">// 判断是否需要补充0</span></span><br><span class="line">        <span class="keyword">int</span> numOfZero = exponent - (result.length() - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 在尾部补充0</span></span><br><span class="line">        <span class="keyword">if</span>(numOfZero&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; numOfZero; i++)&#123;</span><br><span class="line">                result += <span class="string">'0'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 不需补充0，而是需要插入小数点</span></span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            result.insert(result.begin()+exponent+<span class="number">1</span>,<span class="string">'.'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(exponent&lt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="comment">// 在首部补充0（for循环少补了一个0，这个少补的0在添加小数点时补上）</span></span><br><span class="line">        exponent*=<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;exponent<span class="number">-1</span>;i++)&#123;</span><br><span class="line">            result.insert(result.begin(),<span class="string">'0'</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 添加小数点</span></span><br><span class="line">        result=<span class="string">"0."</span>+result;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="comment">// 添加小数点</span></span><br><span class="line">        result.insert(result.begin()+<span class="number">1</span>,<span class="string">'.'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="comment">// 输出结果</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; flag+result;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//system("pause");</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getExponent</span><span class="params">(<span class="built_in">string</span> str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> flag=str[<span class="number">0</span>]==<span class="string">'+'</span>?<span class="number">1</span>:<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">int</span> num=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;str.length();++i)&#123;</span><br><span class="line">        num=num*<span class="number">10</span>+str[i]-<span class="string">'0'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> flag*num;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>作者：<a href="https://github.com/chouxianyu" target="_blank" rel="noopener">@臭咸鱼</a></p><p>转载请注明出处：<a href="https://www.cnblogs.com/chouxianyu/" target="_blank" rel="noopener">https://www.cnblogs.com/chouxianyu/</a></p><p>欢迎讨论和交流!</p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目链接&quot;&gt;&lt;a href=&quot;#题目链接&quot; class=&quot;headerlink&quot; title=&quot;题目链接&quot;&gt;&lt;/a&gt;题目链接&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://pintia.cn/problem-sets/994805260223102976/pro
      
    
    </summary>
    
    
      <category term="PAT" scheme="https://chouxianyu.github.io/tags/PAT/"/>
    
      <category term="算法" scheme="https://chouxianyu.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>PAT乙级1023</title>
    <link href="https://chouxianyu.github.io/2019/08/06/PAT%E4%B9%99%E7%BA%A71023/"/>
    <id>https://chouxianyu.github.io/2019/08/06/PAT乙级1023/</id>
    <published>2019-08-06T07:27:21.000Z</published>
    <updated>2019-08-06T07:28:54.923Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h1><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805298269634560" target="_blank" rel="noopener">https://pintia.cn/problem-sets/994805260223102976/problems/994805298269634560</a></p><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>主要就是控制首位不能为0，其他的都很简单，就遍历然后往尾部加数字就好了。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// PAT BasicLevel 1023</span></span><br><span class="line"><span class="comment">// https://pintia.cn/problem-sets/994805260223102976/problems/994805298269634560</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 结果</span></span><br><span class="line">    <span class="built_in">string</span> res=<span class="string">""</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 获取数字零的数量</span></span><br><span class="line">    <span class="keyword">int</span> zeroCount;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt;zeroCount;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 标志是否为第一个数量超过0个的数字</span></span><br><span class="line">    <span class="keyword">bool</span> isFirst=<span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 非零数字个数</span></span><br><span class="line">    <span class="keyword">int</span> count;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取非零数字的数量并生成最终结果</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">char</span> c=<span class="string">'1'</span>;c&lt;=<span class="string">'9'</span>;++c)&#123;</span><br><span class="line">        <span class="comment">// 获取非零数数量</span></span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; count;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 该数字的数量超过0个时</span></span><br><span class="line">        <span class="keyword">if</span>(count&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 如果是第一个数量超过0的非零数字</span></span><br><span class="line">            <span class="keyword">if</span> (isFirst)&#123;</span><br><span class="line">                <span class="comment">// 先把它加在最前边，因为首位不可以是0</span></span><br><span class="line">                res+=c;</span><br><span class="line">                count--;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 把零加在前边</span></span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;zeroCount;++i)&#123;</span><br><span class="line">                    res+=<span class="string">'0'</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 更新标志</span></span><br><span class="line">                isFirst=<span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 加自己</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; count; ++i)&#123;</span><br><span class="line">                res += c;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 输出形成的最小数</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; res;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//system("pause");</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>作者：<a href="https://github.com/chouxianyu" target="_blank" rel="noopener">@臭咸鱼</a></p><p>转载请注明出处：<a href="https://www.cnblogs.com/chouxianyu/" target="_blank" rel="noopener">https://www.cnblogs.com/chouxianyu/</a></p><p>欢迎讨论和交流!</p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目链接&quot;&gt;&lt;a href=&quot;#题目链接&quot; class=&quot;headerlink&quot; title=&quot;题目链接&quot;&gt;&lt;/a&gt;题目链接&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://pintia.cn/problem-sets/994805260223102976/pro
      
    
    </summary>
    
    
      <category term="PAT" scheme="https://chouxianyu.github.io/tags/PAT/"/>
    
      <category term="算法" scheme="https://chouxianyu.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>PAT乙级1022</title>
    <link href="https://chouxianyu.github.io/2019/08/06/PAT%E4%B9%99%E7%BA%A71022/"/>
    <id>https://chouxianyu.github.io/2019/08/06/PAT乙级1022/</id>
    <published>2019-08-06T07:27:14.000Z</published>
    <updated>2019-08-06T07:28:49.124Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h1><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805299301433344" target="_blank" rel="noopener">https://pintia.cn/problem-sets/994805260223102976/problems/994805299301433344</a></p><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>很简单，参考十进制转二进制的方法，除二取余至商为0。</p><p>这里要注意：需要处理a+b等于0的情况（参考了<a href="https://blog.csdn.net/m0_37285185/article/details/68936069" target="_blank" rel="noopener">https://blog.csdn.net/m0_37285185/article/details/68936069</a>，我又没发现边界……My bad,this is  not so me.）</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// PAT BasicLevel 1022</span></span><br><span class="line"><span class="comment">// https://pintia.cn/problem-sets/994805260223102976/problems/994805299301433344</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">numBaseConversion</span><span class="params">(<span class="keyword">int</span> num,<span class="keyword">int</span> base)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 获取a、b和d</span></span><br><span class="line">    <span class="keyword">int</span> a,b,base;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b &gt;&gt; base;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 进制转换，输出结果</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; numBaseConversion(a+b,base);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//system("pause");</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将一个十进制数转换为base(1,10]进制的字符串</span></span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">numBaseConversion</span><span class="params">(<span class="keyword">int</span> num, <span class="keyword">int</span> base)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">stack</span>&lt;<span class="keyword">char</span>&gt; charStack;</span><br><span class="line">    <span class="built_in">string</span> res=<span class="string">""</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 处理num为0的情况</span></span><br><span class="line">    <span class="keyword">if</span>(num==<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"0"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 处理num非0的情况</span></span><br><span class="line">    <span class="keyword">while</span>(num&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        charStack.push(num%base+<span class="string">'0'</span>);</span><br><span class="line">        num/=base;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (!charStack.empty())&#123;</span><br><span class="line">        res+=charStack.top();</span><br><span class="line">        charStack.pop();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>作者：<a href="https://github.com/chouxianyu" target="_blank" rel="noopener">@臭咸鱼</a></p><p>转载请注明出处：<a href="https://www.cnblogs.com/chouxianyu/" target="_blank" rel="noopener">https://www.cnblogs.com/chouxianyu/</a></p><p>欢迎讨论和交流!</p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目链接&quot;&gt;&lt;a href=&quot;#题目链接&quot; class=&quot;headerlink&quot; title=&quot;题目链接&quot;&gt;&lt;/a&gt;题目链接&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://pintia.cn/problem-sets/994805260223102976/pro
      
    
    </summary>
    
    
      <category term="PAT" scheme="https://chouxianyu.github.io/tags/PAT/"/>
    
      <category term="算法" scheme="https://chouxianyu.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>PAT乙级1021</title>
    <link href="https://chouxianyu.github.io/2019/08/06/PAT%E4%B9%99%E7%BA%A71021/"/>
    <id>https://chouxianyu.github.io/2019/08/06/PAT乙级1021/</id>
    <published>2019-08-06T07:27:10.000Z</published>
    <updated>2019-08-06T07:28:43.682Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h1><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805300404535296" target="_blank" rel="noopener">https://pintia.cn/problem-sets/994805260223102976/problems/994805300404535296</a></p><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>很简单，用string保存这个数字，用一个数组保存各数字出现的次数，然后遍历字符串统计各数字个数，最后按照格式输出各位数字的个数。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// PAT BasicLevel 1021</span></span><br><span class="line"><span class="comment">// https://pintia.cn/problem-sets/994805260223102976/problems/994805300404535296</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 用户输入数字</span></span><br><span class="line">    <span class="built_in">string</span> str;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; str;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 统计各数字个数</span></span><br><span class="line">    <span class="keyword">int</span> digitCount[]=&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;str.length();i++)&#123;</span><br><span class="line">        digitCount[str[i]-<span class="string">'0'</span>]++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 输出各数字个数</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(digitCount[i]&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; i &lt;&lt; <span class="string">':'</span> &lt;&lt; digitCount[i] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//system("pause");</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>作者：<a href="https://github.com/chouxianyu" target="_blank" rel="noopener">@臭咸鱼</a></p><p>转载请注明出处：<a href="https://www.cnblogs.com/chouxianyu/" target="_blank" rel="noopener">https://www.cnblogs.com/chouxianyu/</a></p><p>欢迎讨论和交流!</p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目链接&quot;&gt;&lt;a href=&quot;#题目链接&quot; class=&quot;headerlink&quot; title=&quot;题目链接&quot;&gt;&lt;/a&gt;题目链接&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://pintia.cn/problem-sets/994805260223102976/pro
      
    
    </summary>
    
    
      <category term="PAT" scheme="https://chouxianyu.github.io/tags/PAT/"/>
    
      <category term="算法" scheme="https://chouxianyu.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>PAT乙级1020</title>
    <link href="https://chouxianyu.github.io/2019/08/06/PAT%E4%B9%99%E7%BA%A71020/"/>
    <id>https://chouxianyu.github.io/2019/08/06/PAT乙级1020/</id>
    <published>2019-08-06T07:27:04.000Z</published>
    <updated>2019-08-06T07:28:36.835Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h1><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805301562163200" target="_blank" rel="noopener">https://pintia.cn/problem-sets/994805260223102976/problems/994805301562163200</a></p><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>很容易看出这是个背包（非01背包）问题，直接用贪心求解即可。</p><p>需要注意的是，这里涉及到单价的计算，要注意整数计算会损失精度的问题，所以月饼的总价、库存量、单价都使用了double进行定义。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// PAT BasicLevel 1020</span></span><br><span class="line"><span class="comment">// https://pintia.cn/problem-sets/994805260223102976/problems/994805301562163200</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Mooncake</span>&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">double</span> totalPrice;  <span class="comment">// 总价</span></span><br><span class="line">    <span class="keyword">double</span> storage;     <span class="comment">// 库存量</span></span><br><span class="line">    <span class="keyword">double</span> unitPrice;   <span class="comment">// 单价</span></span><br><span class="line">    Mooncake(<span class="keyword">double</span> storage)&#123;<span class="keyword">this</span>-&gt;storage=storage;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">mooncakeCmp</span><span class="params">(Mooncake&amp;,Mooncake&amp;)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 月饼种类数 市场最大需求量</span></span><br><span class="line">    <span class="keyword">int</span> n;<span class="keyword">int</span> demand;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; demand;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// n种月饼库存量和售价</span></span><br><span class="line">    <span class="built_in">vector</span>&lt;Mooncake&gt; mooncakeVec;</span><br><span class="line">    <span class="keyword">double</span> storage,totalPrice;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i)&#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; storage;</span><br><span class="line">        mooncakeVec.push_back(Mooncake(storage));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)&#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; totalPrice;</span><br><span class="line">        mooncakeVec[i].totalPrice = totalPrice;</span><br><span class="line">        mooncakeVec[i].unitPrice = totalPrice/mooncakeVec[i].storage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 对商品进行排序</span></span><br><span class="line">    sort(mooncakeVec.begin(),mooncakeVec.end(),mooncakeCmp);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 购买商品</span></span><br><span class="line">    <span class="keyword">double</span> profit=<span class="number">0.0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="comment">// 单种月饼全部购买</span></span><br><span class="line">        <span class="keyword">if</span> (demand &gt;= mooncakeVec[i].storage)&#123;</span><br><span class="line">            demand -= mooncakeVec[i].storage;</span><br><span class="line">            profit += mooncakeVec[i].totalPrice;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 单种月饼购买一部分库存</span></span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            profit += mooncakeVec[i].unitPrice * demand;</span><br><span class="line">            <span class="keyword">break</span>;<span class="comment">//直接break了，就不把demand减成0了</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 输出最大收益</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%.2f"</span>,profit);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//system("pause");</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">mooncakeCmp</span><span class="params">(Mooncake &amp;m1, Mooncake &amp;m2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 单价降序排列</span></span><br><span class="line">    <span class="keyword">return</span> m1.unitPrice &gt; m2.unitPrice;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>作者：<a href="https://github.com/chouxianyu" target="_blank" rel="noopener">@臭咸鱼</a></p><p>转载请注明出处：<a href="https://www.cnblogs.com/chouxianyu/" target="_blank" rel="noopener">https://www.cnblogs.com/chouxianyu/</a></p><p>欢迎讨论和交流!</p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目链接&quot;&gt;&lt;a href=&quot;#题目链接&quot; class=&quot;headerlink&quot; title=&quot;题目链接&quot;&gt;&lt;/a&gt;题目链接&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://pintia.cn/problem-sets/994805260223102976/pro
      
    
    </summary>
    
    
      <category term="PAT" scheme="https://chouxianyu.github.io/tags/PAT/"/>
    
      <category term="算法" scheme="https://chouxianyu.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="背包" scheme="https://chouxianyu.github.io/tags/%E8%83%8C%E5%8C%85/"/>
    
      <category term="贪心" scheme="https://chouxianyu.github.io/tags/%E8%B4%AA%E5%BF%83/"/>
    
  </entry>
  
  <entry>
    <title>PAT乙级1019</title>
    <link href="https://chouxianyu.github.io/2019/08/06/PAT%E4%B9%99%E7%BA%A71019/"/>
    <id>https://chouxianyu.github.io/2019/08/06/PAT乙级1019/</id>
    <published>2019-08-06T07:26:55.000Z</published>
    <updated>2019-08-06T07:28:15.168Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h1><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805302786899968" target="_blank" rel="noopener">https://pintia.cn/problem-sets/994805260223102976/problems/994805302786899968</a></p><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>根据用户输入或者每次的计算结果，生成大数和小数，然后输出计算过程，一直循环该过程；当结果为0或6174时，循环终止。</p><p>刚开始我有一个测试点是没过的，参考了<a href="https://blog.csdn.net/qunqunstyle99/article/details/83189284" target="_blank" rel="noopener">https://blog.csdn.net/qunqunstyle99/article/details/83189284</a>才过了全部测试点。所以写ACM题我们得自己会猜一些边界条件，<strong>正确理解题意</strong>，然后写代码。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// PAT BasicLevel 1019</span></span><br><span class="line"><span class="comment">// https://pintia.cn/problem-sets/994805260223102976/problems/994805302786899968</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ARRSIZE 5</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ARRLEN 4</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 生成的大数和小数</span></span><br><span class="line">    <span class="keyword">char</span> big[ARRSIZE];</span><br><span class="line">    <span class="keyword">char</span> small[ARRSIZE];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 大数-小数</span></span><br><span class="line">    <span class="keyword">int</span> result;<span class="keyword">char</span> res[ARRSIZE];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 获取用户输入的数字</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;result);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 生成大数和小数</span></span><br><span class="line">        <span class="built_in">sprintf</span>(small, <span class="string">"%04d\0"</span>, result);</span><br><span class="line">        sort(small, small + ARRLEN);</span><br><span class="line">        <span class="built_in">strcpy</span>(big, small);</span><br><span class="line">        reverse(big, big + ARRLEN);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 计算大数-小数</span></span><br><span class="line">        result = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, diff; i &lt; ARRLEN; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            result = result * <span class="number">10</span> + big[i] - small[i];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 输出结果</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%s - %s = %04d\n"</span>, big, small, result);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 当结果为0或6174时程序结束</span></span><br><span class="line">        <span class="built_in">sprintf</span>(res, <span class="string">"%04d\0"</span>, result);</span><br><span class="line">        <span class="keyword">if</span> (!(<span class="built_in">strcmp</span>(res, <span class="string">"0000\0"</span>) &amp;&amp; <span class="built_in">strcmp</span>(res, <span class="string">"6174\0"</span>)))</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//system("pause");</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>作者：<a href="https://github.com/chouxianyu" target="_blank" rel="noopener">@臭咸鱼</a></p><p>转载请注明出处：<a href="https://www.cnblogs.com/chouxianyu/" target="_blank" rel="noopener">https://www.cnblogs.com/chouxianyu/</a></p><p>欢迎讨论和交流!</p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目链接&quot;&gt;&lt;a href=&quot;#题目链接&quot; class=&quot;headerlink&quot; title=&quot;题目链接&quot;&gt;&lt;/a&gt;题目链接&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://pintia.cn/problem-sets/994805260223102976/pro
      
    
    </summary>
    
    
      <category term="PAT" scheme="https://chouxianyu.github.io/tags/PAT/"/>
    
      <category term="算法" scheme="https://chouxianyu.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>PAT乙级1018</title>
    <link href="https://chouxianyu.github.io/2019/08/05/PAT%E4%B9%99%E7%BA%A71018/"/>
    <id>https://chouxianyu.github.io/2019/08/05/PAT乙级1018/</id>
    <published>2019-08-05T14:38:37.000Z</published>
    <updated>2019-08-05T14:39:23.573Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h1><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805304020025344" target="_blank" rel="noopener">https://pintia.cn/problem-sets/994805260223102976/problems/994805304020025344</a></p><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>刚开始做很懵逼，可能并不难吧，但就是感觉做出来的话代码会很不优雅，所以想了半天。</p><p>然后把这个题放了会儿，有了思路。现在第3个测试点没过，我又读了一遍代码，真的不是很懂哪里有错……</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// PAT BasicLevel 1018</span></span><br><span class="line"><span class="comment">// https://pintia.cn/problem-sets/994805260223102976/problems/994805304020025344</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PK</span><span class="params">(<span class="keyword">char</span> ,<span class="keyword">char</span>)</span></span>;</span><br><span class="line"><span class="keyword">int</span> aWin[<span class="number">3</span>]=&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> bWin[<span class="number">3</span>]=&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> equalCount=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 交锋回合数</span></span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt;n;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 获取交锋信息</span></span><br><span class="line">    <span class="keyword">char</span> a,b;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i)&#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b;</span><br><span class="line">        PK(a,b);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 输出结果</span></span><br><span class="line">    <span class="keyword">int</span> aWinMaxCount=<span class="number">0</span>,bWinMaxCount=<span class="number">0</span>;<span class="comment">//甲和乙三种出手方式的最大胜利次数</span></span><br><span class="line">    <span class="keyword">int</span> aWinMaxIndex=<span class="number">0</span>,bWinMaxIndex=<span class="number">0</span>;<span class="comment">//甲和乙胜利最多的出手方式下标</span></span><br><span class="line">    <span class="keyword">int</span> aWinCount=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++)&#123;</span><br><span class="line">        <span class="comment">// 更新甲的胜利次数</span></span><br><span class="line">        aWinCount+=aWin[i];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 更新甲胜利最多的攻击方式</span></span><br><span class="line">        <span class="keyword">if</span> (aWin[i]&gt;aWinMaxCount)&#123;</span><br><span class="line">            aWinMaxCount=aWin[i];</span><br><span class="line">            aWinMaxIndex=i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 更新乙胜利最多的攻击方式</span></span><br><span class="line">        <span class="keyword">if</span> (bWin[i] &gt; bWinMaxCount)&#123;</span><br><span class="line">            bWinMaxCount = aWin[i];</span><br><span class="line">            bWinMaxIndex = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 输出结果</span></span><br><span class="line">    <span class="keyword">char</span> choice[]=<span class="string">"BCJ"</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; aWinCount &lt;&lt; <span class="string">' '</span>&lt;&lt; equalCount &lt;&lt; <span class="string">' '</span> &lt;&lt; n - aWinCount - equalCount &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; n - aWinCount - equalCount &lt;&lt; <span class="string">' '</span> &lt;&lt; equalCount &lt;&lt; <span class="string">' '</span> &lt;&lt; aWinCount &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; choice[aWinMaxIndex] &lt;&lt; <span class="string">' '</span> &lt;&lt; choice[bWinMaxIndex] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//system("pause");</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PK</span><span class="params">(<span class="keyword">char</span> a, <span class="keyword">char</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a==b)&#123;</span><br><span class="line">        equalCount++;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (a)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'B'</span>:</span><br><span class="line">                <span class="keyword">if</span>(b==<span class="string">'C'</span>)</span><br><span class="line">                    aWin[<span class="number">0</span>]++;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    bWin[<span class="number">2</span>]++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'C'</span>:</span><br><span class="line">                <span class="keyword">if</span> (b == <span class="string">'B'</span>)</span><br><span class="line">                    bWin[<span class="number">0</span>]++;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    aWin[<span class="number">1</span>]++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">case</span> <span class="string">'J'</span>:</span><br><span class="line">                <span class="keyword">if</span> (b == <span class="string">'C'</span>)</span><br><span class="line">                    bWin[<span class="number">1</span>]++;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    aWin[<span class="number">2</span>]++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>作者：<a href="https://github.com/chouxianyu" target="_blank" rel="noopener">@臭咸鱼</a></p><p>转载请注明出处：<a href="https://www.cnblogs.com/chouxianyu/" target="_blank" rel="noopener">https://www.cnblogs.com/chouxianyu/</a></p><p>欢迎讨论和交流!</p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目链接&quot;&gt;&lt;a href=&quot;#题目链接&quot; class=&quot;headerlink&quot; title=&quot;题目链接&quot;&gt;&lt;/a&gt;题目链接&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://pintia.cn/problem-sets/994805260223102976/pro
      
    
    </summary>
    
    
      <category term="PAT" scheme="https://chouxianyu.github.io/tags/PAT/"/>
    
      <category term="算法" scheme="https://chouxianyu.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>PAT乙级1016</title>
    <link href="https://chouxianyu.github.io/2019/08/05/PAT%E4%B9%99%E7%BA%A71016/"/>
    <id>https://chouxianyu.github.io/2019/08/05/PAT乙级1016/</id>
    <published>2019-08-05T14:38:32.000Z</published>
    <updated>2019-08-05T14:39:13.058Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h1><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805306310115328" target="_blank" rel="noopener">https://pintia.cn/problem-sets/994805260223102976/problems/994805306310115328</a></p><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>很简单，遍历两个字符串，找到da或db，然后不断更新pa和pb即可。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// PAT BasicLevel 1016</span></span><br><span class="line"><span class="comment">// https://pintia.cn/problem-sets/994805260223102976/problems/994805306310115328</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 获取a、da、b和db</span></span><br><span class="line">    <span class="built_in">string</span> a,b;</span><br><span class="line">    <span class="keyword">char</span> da,db;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; a &gt;&gt;da &gt;&gt; b &gt;&gt; db;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 计算pa</span></span><br><span class="line">    <span class="keyword">int</span> pa=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;a.length();++i)&#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]==da)&#123;</span><br><span class="line">            pa=pa*<span class="number">10</span>+da-<span class="string">'0'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 计算pb</span></span><br><span class="line">    <span class="keyword">int</span> pb = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; b.length(); ++i)&#123;</span><br><span class="line">        <span class="keyword">if</span> (b[i] == db)&#123;</span><br><span class="line">            pb = pb * <span class="number">10</span> + db - <span class="string">'0'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 输出结果</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; pa+pb;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//system("pause");</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>作者：<a href="https://github.com/chouxianyu" target="_blank" rel="noopener">@臭咸鱼</a></p><p>转载请注明出处：<a href="https://www.cnblogs.com/chouxianyu/" target="_blank" rel="noopener">https://www.cnblogs.com/chouxianyu/</a></p><p>欢迎讨论和交流!</p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目链接&quot;&gt;&lt;a href=&quot;#题目链接&quot; class=&quot;headerlink&quot; title=&quot;题目链接&quot;&gt;&lt;/a&gt;题目链接&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://pintia.cn/problem-sets/994805260223102976/pro
      
    
    </summary>
    
    
      <category term="PAT" scheme="https://chouxianyu.github.io/tags/PAT/"/>
    
      <category term="算法" scheme="https://chouxianyu.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>PAT乙级1015</title>
    <link href="https://chouxianyu.github.io/2019/08/05/PAT%E4%B9%99%E7%BA%A71015/"/>
    <id>https://chouxianyu.github.io/2019/08/05/PAT乙级1015/</id>
    <published>2019-08-05T08:07:57.000Z</published>
    <updated>2019-08-05T08:09:22.588Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h1><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805307551629312" target="_blank" rel="noopener">https://pintia.cn/problem-sets/994805260223102976/problems/994805307551629312</a></p><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><p>思路比较简单，核心就是定义一个学生的排序规则：将考生分为4类（德和才分数都低于L的直接淘汰），先比较考生的类型，再比较分数或者准考证号，其中分数都是降序、准考证号是升序。</p><p>淘汰直接在获取考生信息时进行；分类由<code>Student</code>构造函数实现；考生排序由<code>stuCmp</code>实现。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// PAT BasicLevel 1015</span></span><br><span class="line"><span class="comment">// https://pintia.cn/problem-sets/994805260223102976/problems/994805307551629312</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> N, L, H, M;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">string</span> id;</span><br><span class="line">    <span class="keyword">int</span> de;</span><br><span class="line">    <span class="keyword">int</span> cai;</span><br><span class="line">    <span class="keyword">int</span> type;</span><br><span class="line">    Student(<span class="built_in">string</span> id,<span class="keyword">int</span> de,<span class="keyword">int</span> cai)&#123;</span><br><span class="line">        <span class="keyword">this</span>-&gt;id=id;<span class="keyword">this</span>-&gt;de=de;<span class="keyword">this</span>-&gt;cai=cai;</span><br><span class="line">        <span class="keyword">if</span> (de &gt;= H &amp;&amp; cai &gt;= H)&#123;<span class="comment">//才德全尽</span></span><br><span class="line">            <span class="keyword">this</span>-&gt;type=<span class="number">3</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(de&gt;=H&amp;&amp;cai&lt;H)&#123;<span class="comment">//德胜才</span></span><br><span class="line">            <span class="keyword">this</span>-&gt;type = <span class="number">2</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(de&lt;H&amp;&amp;cai&lt;H&amp;&amp;de&gt;=cai)&#123;<span class="comment">//“才德兼亡”但尚有“德胜才”者</span></span><br><span class="line">            <span class="keyword">this</span>-&gt;type = <span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;<span class="comment">//达到最低线L</span></span><br><span class="line">            <span class="keyword">this</span>-&gt;type = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; id &lt;&lt; <span class="string">' '</span> &lt;&lt; de &lt;&lt; <span class="string">' '</span> &lt;&lt; cai &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">stuCmp</span><span class="params">(Student&amp;, Student&amp;)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 考生数 最低录取线 优先录取线</span></span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N &gt;&gt; L &gt;&gt; H;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 获取考生信息</span></span><br><span class="line">    <span class="built_in">vector</span>&lt;Student&gt; stuVec;</span><br><span class="line">    <span class="built_in">string</span> id;<span class="keyword">int</span> de;<span class="keyword">int</span> cai;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; id &gt;&gt; de &gt;&gt; cai;</span><br><span class="line">        <span class="comment">// 只存储cai和de不低于L的</span></span><br><span class="line">        <span class="keyword">if</span> (de &gt;= L &amp;&amp; cai &gt;= L)&#123;</span><br><span class="line">            stuVec.push_back(Student(id, de, cai));</span><br><span class="line">            M++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 学生排序</span></span><br><span class="line">    sort(stuVec.begin(),stuVec.end(),stuCmp);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 输出结果</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; M &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">vector</span>&lt;Student&gt;::iterator it = stuVec.begin(); it != stuVec.end(); ++it)&#123;</span><br><span class="line">        it-&gt;print();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//system("pause");</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">stuCmp</span><span class="params">(Student &amp;s1, Student &amp;s2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(s1.type==s2.type)&#123;<span class="comment">// 同种type，比较总分</span></span><br><span class="line">        <span class="keyword">if</span> (s1.cai + s1.de == s2.cai + s2.de)&#123;</span><br><span class="line">            <span class="keyword">if</span>(s1.de==s2.de)&#123;</span><br><span class="line">                <span class="comment">// id升序输出，其他都是降序输出的</span></span><br><span class="line">                <span class="keyword">return</span> s1.id &lt; s2.id;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> s1.de&gt;s2.de;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> s1.cai + s1.de &gt; s2.cai + s2.de;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> s1.type&gt;s2.type;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>作者：<a href="https://github.com/chouxianyu" target="_blank" rel="noopener">@臭咸鱼</a></p><p>转载请注明出处：<a href="https://www.cnblogs.com/chouxianyu/" target="_blank" rel="noopener">https://www.cnblogs.com/chouxianyu/</a></p><p>欢迎讨论和交流!</p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目链接&quot;&gt;&lt;a href=&quot;#题目链接&quot; class=&quot;headerlink&quot; title=&quot;题目链接&quot;&gt;&lt;/a&gt;题目链接&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://pintia.cn/problem-sets/994805260223102976/pro
      
    
    </summary>
    
    
      <category term="PAT" scheme="https://chouxianyu.github.io/tags/PAT/"/>
    
      <category term="算法" scheme="https://chouxianyu.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>PAT乙级1014</title>
    <link href="https://chouxianyu.github.io/2019/08/05/PAT%E4%B9%99%E7%BA%A71014/"/>
    <id>https://chouxianyu.github.io/2019/08/05/PAT乙级1014/</id>
    <published>2019-08-05T08:07:51.000Z</published>
    <updated>2019-08-05T08:09:13.551Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h1><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805308755394560" target="_blank" rel="noopener">https://pintia.cn/problem-sets/994805260223102976/problems/994805308755394560</a></p><h1 id="题解一（部分正确）"><a href="#题解一（部分正确）" class="headerlink" title="题解一（部分正确）"></a>题解一（部分正确）</h1><p>这是我的方法，第2个测试点没有过，和正确的代码比较，目前没比较出来错误，可能是我<code>map</code>用错了？</p><p>需要注意的点:</p><ol><li>第一对是相同的大写字母A-G</li><li>第二对是相同的数字0-9和A-N</li><li>小时和分钟输出宽度为2，不足2位用零填充</li><li>不用map也行，可以用ASCII码和字符的对应关系</li><li>判断大小写字母、数字等函数C++已自带，不用自己写</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// PAT BasicLevel 1014</span></span><br><span class="line"><span class="comment">// https://pintia.cn/problem-sets/994805260223102976/problems/994805308755394560</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isUpperCase</span><span class="params">(<span class="keyword">char</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isLowerCase</span><span class="params">(<span class="keyword">char</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isAlpha</span><span class="params">(<span class="keyword">char</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isNumber</span><span class="params">(<span class="keyword">char</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isDay</span><span class="params">(<span class="keyword">char</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isHour</span><span class="params">(<span class="keyword">char</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 获取四个字符串</span></span><br><span class="line">    <span class="built_in">string</span> strs[<span class="number">4</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;++i)&#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; strs[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 字母与周几的映射</span></span><br><span class="line">    <span class="built_in">map</span>&lt;<span class="keyword">char</span>,<span class="built_in">string</span>&gt; dayMap;</span><br><span class="line">    dayMap[<span class="string">'A'</span>] = <span class="string">"MON"</span>;dayMap[<span class="string">'B'</span>] = <span class="string">"TUE"</span>;dayMap[<span class="string">'C'</span>] = <span class="string">"WED"</span>;</span><br><span class="line">    dayMap[<span class="string">'D'</span>] = <span class="string">"THU"</span>;dayMap[<span class="string">'E'</span>] = <span class="string">"FRI"</span>;dayMap[<span class="string">'F'</span>] = <span class="string">"SAT"</span>;dayMap[<span class="string">'G'</span>] = <span class="string">"SUN"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 字母（或数字）与小时的映射</span></span><br><span class="line">    <span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; hourMap;</span><br><span class="line">    hourMap[<span class="number">0</span>] = <span class="number">0</span>;hourMap[<span class="number">1</span>] = <span class="number">1</span>;hourMap[<span class="number">2</span>] = <span class="number">2</span>;hourMap[<span class="number">3</span>] = <span class="number">3</span>;hourMap[<span class="number">4</span>] = <span class="number">4</span>;</span><br><span class="line">    hourMap[<span class="number">5</span>] = <span class="number">5</span>;hourMap[<span class="number">6</span>] = <span class="number">6</span>;hourMap[<span class="number">7</span>] = <span class="number">7</span>;hourMap[<span class="number">8</span>] = <span class="number">8</span>;hourMap[<span class="number">9</span>] = <span class="number">9</span>;</span><br><span class="line">    hourMap[<span class="string">'A'</span>] = <span class="number">10</span>;hourMap[<span class="string">'B'</span>] = <span class="number">11</span>;hourMap[<span class="string">'C'</span>] = <span class="number">12</span>;hourMap[<span class="string">'D'</span>] = <span class="number">13</span>;</span><br><span class="line">    hourMap[<span class="string">'E'</span>] = <span class="number">14</span>;hourMap[<span class="string">'F'</span>] = <span class="number">15</span>;hourMap[<span class="string">'G'</span>] = <span class="number">16</span>;hourMap[<span class="string">'H'</span>] = <span class="number">17</span>;</span><br><span class="line">    hourMap[<span class="string">'I'</span>] = <span class="number">18</span>;hourMap[<span class="string">'J'</span>] = <span class="number">19</span>;hourMap[<span class="string">'K'</span>] = <span class="number">20</span>;hourMap[<span class="string">'L'</span>] = <span class="number">21</span>;</span><br><span class="line">    hourMap[<span class="string">'M'</span>] = <span class="number">22</span>;hourMap[<span class="string">'N'</span>] = <span class="number">23</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 遍历前两个字符串</span></span><br><span class="line">    <span class="keyword">int</span> index;</span><br><span class="line">    <span class="keyword">int</span> minLen1 = strs[<span class="number">0</span>].length() &lt; strs[<span class="number">1</span>].length() ? strs[<span class="number">0</span>].length() : strs[<span class="number">1</span>].length();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; minLen1; ++i)&#123;</span><br><span class="line">        <span class="keyword">if</span> (strs[<span class="number">0</span>][i] == strs[<span class="number">1</span>][i] &amp;&amp; isDay(strs[<span class="number">1</span>][i]))&#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; dayMap[strs[<span class="number">1</span>][i]] &lt;&lt; <span class="string">' '</span>;</span><br><span class="line">            index=i;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=index+<span class="number">1</span>;i&lt;minLen1;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (strs[<span class="number">0</span>][i] == strs[<span class="number">1</span>][i] &amp;&amp; isHour(strs[<span class="number">1</span>][i]))&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%02d:"</span>, hourMap[strs[<span class="number">1</span>][i]]);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 遍历后两个字符串</span></span><br><span class="line">    <span class="keyword">int</span> minLen2 = strs[<span class="number">2</span>].length() &lt; strs[<span class="number">3</span>].length() ? strs[<span class="number">2</span>].length() : strs[<span class="number">3</span>].length();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; minLen2; ++i)&#123;</span><br><span class="line">        <span class="keyword">if</span> (strs[<span class="number">2</span>][i] == strs[<span class="number">3</span>][i] &amp;&amp; isAlpha(strs[<span class="number">3</span>][i]))&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%02d"</span>, i);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//system("pause");</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isDay</span><span class="params">(<span class="keyword">char</span> c)</span></span>&#123;</span><br><span class="line">    <span class="comment">// A-G</span></span><br><span class="line">    <span class="keyword">return</span> c &gt;= <span class="string">'A'</span> &amp;&amp; c &lt;= <span class="string">'G'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isHour</span><span class="params">(<span class="keyword">char</span> c)</span></span>&#123;</span><br><span class="line">    <span class="comment">// 0-9 A-N</span></span><br><span class="line">    <span class="keyword">return</span> isNumber(c) || (c &gt;= <span class="string">'A'</span> &amp;&amp; c &lt;= <span class="string">'N'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isUpperCase</span><span class="params">(<span class="keyword">char</span> c)</span></span>&#123;</span><br><span class="line">    <span class="comment">// A-Z</span></span><br><span class="line">    <span class="keyword">return</span> c &gt;= <span class="string">'A'</span> &amp;&amp; c &lt;= <span class="string">'Z'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isLowerCase</span><span class="params">(<span class="keyword">char</span> c)</span></span>&#123;</span><br><span class="line">    <span class="comment">// a-z</span></span><br><span class="line">    <span class="keyword">return</span> c &gt;= <span class="string">'a'</span> &amp;&amp; c &lt;= <span class="string">'z'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isAlpha</span><span class="params">(<span class="keyword">char</span> c)</span></span>&#123;</span><br><span class="line">    <span class="comment">// a-z A-Z</span></span><br><span class="line">    <span class="keyword">return</span> isLowerCase(c)||isUpperCase(c);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isNumber</span><span class="params">(<span class="keyword">char</span> c)</span></span>&#123;</span><br><span class="line">    <span class="comment">// 0-9</span></span><br><span class="line">    <span class="keyword">return</span> c &gt;= <span class="string">'0'</span> &amp;&amp; c &lt;= <span class="string">'9'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="题解二"><a href="#题解二" class="headerlink" title="题解二"></a>题解二</h1><p>网上找的，和我看起来思路一样啊……</p><p>参考链接：<a href="https://blog.csdn.net/supremebuct/article/details/83105861" target="_blank" rel="noopener">https://blog.csdn.net/supremebuct/article/details/83105861</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt; //9.16</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">deal</span><span class="params">(<span class="built_in">string</span> ch1, <span class="built_in">string</span> ch2)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">deal1</span><span class="params">(<span class="built_in">string</span> ch3, <span class="built_in">string</span> ch4)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> ch1, ch2, ch3, ch4;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; ch1 &gt;&gt; ch2 &gt;&gt; ch3 &gt;&gt; ch4;</span><br><span class="line">    deal(ch1, ch2);</span><br><span class="line">    deal1(ch3, ch4);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">deal</span><span class="params">(<span class="built_in">string</span> ch1, <span class="built_in">string</span> ch2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> day[] = &#123;<span class="string">"MON"</span>, <span class="string">"TUE"</span>, <span class="string">"WED"</span>, <span class="string">"THU"</span>, <span class="string">"FRI"</span>, <span class="string">"SAT"</span>, <span class="string">"SUN"</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> num, num1, i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; ch1.length() &amp;&amp; i &lt; ch2.length())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch1[i] == ch2[i] &amp;&amp; (ch1[i] &gt;= <span class="string">'A'</span> &amp;&amp; ch1[i] &lt;= <span class="string">'G'</span>)) <span class="comment">//一开始没有设定范围只是判断了其是否是大写，导致有的例子通不过</span></span><br><span class="line">        &#123;</span><br><span class="line">            num1 = ch1[i] - <span class="string">'A'</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    i++;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; day[num1] &lt;&lt; <span class="string">' '</span>;</span><br><span class="line">    <span class="keyword">int</span> num2;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; ch1.length() &amp;&amp; i &lt; ch2.length())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch1[i] == ch2[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">isdigit</span>(ch1[i]))</span><br><span class="line">            &#123;</span><br><span class="line">                num2 = ch1[i] - <span class="string">'0'</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (ch1[i] &gt;= <span class="string">'A'</span> &amp;&amp; ch1[i] &lt;= <span class="string">'N'</span>) <span class="comment">//一开始没有设定范围只是判断了其是否是大写，导致有的例子通不过</span></span><br><span class="line">            &#123;</span><br><span class="line">                num2 = <span class="number">10</span> + (ch1[i] - <span class="string">'A'</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%02d:"</span>, num2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">deal1</span><span class="params">(<span class="built_in">string</span> ch3, <span class="built_in">string</span> ch4)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> num3;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; ch3.length() &amp;&amp; i &lt; ch4.length())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch3[i] == ch4[i] &amp;&amp; <span class="built_in">isalpha</span>(ch3[i]))</span><br><span class="line">        &#123;</span><br><span class="line">            num3 = i;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%02d"</span>, num3);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>作者：<a href="https://github.com/chouxianyu" target="_blank" rel="noopener">@臭咸鱼</a></p><p>转载请注明出处：<a href="https://www.cnblogs.com/chouxianyu/" target="_blank" rel="noopener">https://www.cnblogs.com/chouxianyu/</a></p><p>欢迎讨论和交流!</p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目链接&quot;&gt;&lt;a href=&quot;#题目链接&quot; class=&quot;headerlink&quot; title=&quot;题目链接&quot;&gt;&lt;/a&gt;题目链接&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://pintia.cn/problem-sets/994805260223102976/pro
      
    
    </summary>
    
    
      <category term="PAT" scheme="https://chouxianyu.github.io/tags/PAT/"/>
    
      <category term="算法" scheme="https://chouxianyu.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
</feed>
