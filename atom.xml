<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>臭咸鱼的缺氧瓶</title>
  
  <subtitle>快给我氧气！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://chouxianyu.github.io/"/>
  <updated>2018-08-31T16:11:02.609Z</updated>
  <id>https://chouxianyu.github.io/</id>
  
  <author>
    <name>臭咸鱼</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>常量指针与指针常量</title>
    <link href="https://chouxianyu.github.io/2018/08/26/%E5%B8%B8%E9%87%8F%E6%8C%87%E9%92%88%E4%B8%8E%E6%8C%87%E9%92%88%E5%B8%B8%E9%87%8F/"/>
    <id>https://chouxianyu.github.io/2018/08/26/常量指针与指针常量/</id>
    <published>2018-08-25T19:49:34.000Z</published>
    <updated>2018-08-31T16:11:02.609Z</updated>
    
    <content type="html"><![CDATA[<p>常量指针和指针常量是两个经常出现的概念，今天做个小小总结。</p><p>文章各部分的内容都是很容易理解的，并且附加代码说明，一切的前提是理解<strong>文章2.1和2.2部分</strong>，所以搞好基础再往后看呐。嫌长的直接跳到结论去。</p><h1 id="废话"><a href="#废话" class="headerlink" title="废话"></a>废话</h1><p>最近在看vc，看到书里有提这两个概念，学c的时候也有这两个概念，学c++的时候也有顶层const和底层const（这个我懂是懂，但从理解层次上不是那么懂）。所以就是很常见啦，但似乎很多人很迷惑，或者说理解着不舒服。于是我的“神逻辑”就来了。（希望不要被大佬按在地上摩擦，谢谢合作。欢迎讨论，欢迎留言，欢迎转发。如果你不嫌我菜的话，欢迎提各方面的问题，我可以研究研究）</p><h1 id="我对它们的理解"><a href="#我对它们的理解" class="headerlink" title="我对它们的理解"></a>我对它们的理解</h1><p>常指指常这种名词是英文翻译过来的，所以中文会有点拗口。常量的、指针的，我们生活中是没有这样的词的。</p><p>有的英语变成中文会很生涩。英文里是这样的两个东西:pointer to const, const pointer。const是constant的缩写。</p><p>中文有两种翻译方法：pointer to const, const pointer。constant可以是名词也可以是形容词</p><p>第一种：指向常量的指针（常量指针），指针常量。</p><p>第二种：指向常量的指针（指针常量，有人讲就不应该有指针常量的说法），常量指针。</p><p>说来说去都是中文的文字游戏，那个英文该怎么翻译。英文里很容易能看懂的，换成中文就有两种换法。</p><p>第二种方法确实不该有指针常量这个说法。所以要讨论中文版的话，如果出现指针常量，就应该是第一种方法。</p><p><a href="https://www.thegeekstuff.com/2012/06/c-constant-pointers换成英文就不用玩文字游戏了" target="_blank" rel="noopener">https://www.thegeekstuff.com/2012/06/c-constant-pointers换成英文就不用玩文字游戏了</a></p><p>所以呢，本质上应该用英语去讲。但本篇是讲中文版的一种方法。（去百度也会发现有两种方法）。</p><p>本文用第一种说法，常指是pointer to const，指常是 const pointer。我觉得两种翻译都可以。这里是这种中文说法而已。</p><h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><p>常指指常就是两个词而已，都是四个字。把前边的两个字当做形容词（是用来修饰后边的名词的），后边的名词才是重点。</p><p><strong>指针就是地址嘛，常量就是不可以修改的量</strong>（初始化不算做赋值，不算做修改）。</p><p><strong>注意区分指针本身（的内容）和指向的内存的内容。</strong></p><p>修改指针即改变指针本身的内容，修改内存或者说修改内存内容就是修改指针指向的内存中的内容。这样讲的很清楚了吧……..</p><h2 id="常量指针"><a href="#常量指针" class="headerlink" title="常量指针"></a>常量指针</h2><p>常量指针中的常量呢，指的是这个指针的作用是常量性的、不可修改的，即<strong>不可以通过该指针修改内存中的内容</strong>，并不代表指向的内存不修改，注意前边有通过二字。</p><p>这个词也有<strong>指向常量的指针</strong>的叫法，我认为这个中文叫法是不准确的甚至是<strong>错误</strong>的。如果说常量指针是指向常量的指针，我认为这句话最直接的意思是说指针指向的内存是常量，这个意思是错误的，会误导他人，所以我不提倡这样叫它。证明参见<strong>文章3.3部分</strong></p><p>在讨论问题的时候，互相知道对方说的是什么东西非常重要~，比如c++里默认构造，没有构造函数这样的句子，不同人的理解方式不同，这些概念理解也是讨论进行的一个前提。</p><h2 id="指针常量"><a href="#指针常量" class="headerlink" title="指针常量"></a>指针常量</h2><p>这里的指针呢，指的是<strong>这个常量是一个地址</strong>。</p><h2 id="如何根据定义判断类型"><a href="#如何根据定义判断类型" class="headerlink" title="如何根据定义判断类型"></a>如何根据定义判断类型</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//代码1</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> * p;<span class="comment">//常量指针</span></span><br><span class="line"><span class="keyword">char</span> <span class="keyword">const</span> * p;<span class="comment">//常量指针 跟上一句等效</span></span><br><span class="line"><span class="keyword">char</span> * <span class="keyword">const</span> p;<span class="comment">//指针常量</span></span><br></pre></td></tr></table></figure><h3 id="根据const和-的相对位置"><a href="#根据const和-的相对位置" class="headerlink" title="根据const和*的相对位置"></a>根据const和*的相对位置</h3><p>const 在*左边=》常量指针；反之，指针常量。</p><h3 id="根据谁离变量名近"><a href="#根据谁离变量名近" class="headerlink" title="根据谁离变量名近"></a>根据谁离变量名近</h3><p>const近=》指针常量；反之，常量指针。（const就是不变嘛，*就是指针啊，所以理解是很重要的，也就是<strong>2.1</strong>）</p><h1 id="常指和指常的特性"><a href="#常指和指常的特性" class="headerlink" title="常指和指常的特性"></a>常指和指常的特性</h1><h2 id="常量指针-1"><a href="#常量指针-1" class="headerlink" title="常量指针"></a>常量指针</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//代码2</span></span><br><span class="line"><span class="comment">//char ch[] = "HelloWorld!";</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>* pStr1=ch;<span class="comment">//定义常量指针</span></span><br><span class="line"><span class="comment">//1.常量指针本身的值可以修改</span></span><br><span class="line">pStr1 = <span class="literal">nullptr</span>;<span class="comment">//correct</span></span><br><span class="line"><span class="comment">//2.不能通过常量指针修改它所指向的内存中的内容（注意通过二字，不要误会常量指针）</span></span><br><span class="line">*pStr1 = <span class="string">'h'</span>;<span class="comment">//error</span></span><br><span class="line">*(pStr1 + <span class="number">1</span>) = <span class="string">'E'</span>;<span class="comment">//error</span></span><br><span class="line">pStr1[<span class="number">2</span>] = <span class="string">'L'</span>;<span class="comment">//error</span></span><br></pre></td></tr></table></figure><h2 id="指针常量-1"><a href="#指针常量-1" class="headerlink" title="指针常量"></a>指针常量</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//代码3</span></span><br><span class="line"><span class="comment">//char ch[] = "HelloWorld!";</span></span><br><span class="line"><span class="comment">//指针常量（顶层const）</span></span><br><span class="line"><span class="keyword">char</span> * <span class="keyword">const</span> pStr2 = ch;<span class="comment">//定义并初始化</span></span><br><span class="line"><span class="comment">//1.是常量，不可以被赋值（不把初始化叫做赋值）</span></span><br><span class="line">pStr2 = <span class="literal">nullptr</span>;<span class="comment">//error</span></span><br></pre></td></tr></table></figure><h2 id="常量指针容易被误解的地方"><a href="#常量指针容易被误解的地方" class="headerlink" title="常量指针容易被误解的地方"></a>常量指针容易被误解的地方</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//代码4</span></span><br><span class="line"><span class="keyword">int</span> n = <span class="number">0</span>;<span class="comment">//定义变量n</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> * p1 = &amp;n;<span class="comment">//常量指针p1</span></span><br><span class="line"><span class="keyword">int</span> * <span class="keyword">const</span> p2 = &amp;n;<span class="comment">//指针常量p2</span></span><br><span class="line">*p1 = <span class="number">3</span>;<span class="comment">//error 因为不能通过常量指针修改内存中的内容，划重点！：但这不是说指向内存中的内容不可修改</span></span><br><span class="line">n = <span class="number">3</span>;<span class="comment">//correct这是对的，因为n是变量啊</span></span><br><span class="line">*p2 = <span class="number">3</span>;<span class="comment">//correct 指针常量部分的代码就有体现，不多说</span></span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//代码5</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> n = <span class="number">0</span>;<span class="comment">//定义变量n</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> * p1 = &amp;n;<span class="comment">//常量指针p1</span></span><br><span class="line"><span class="keyword">int</span> * <span class="keyword">const</span> p2 = &amp;n;<span class="comment">//error 错误的 原因见下-指针间的赋值</span></span><br><span class="line">*p1 = <span class="number">3</span>;<span class="comment">//error 原因是常指不可修改内存</span></span><br><span class="line">n = <span class="number">3</span>;<span class="comment">//error 原因是n是变量</span></span><br></pre></td></tr></table></figure><p>代码4和代码5中的<strong>常量指针p1都不能改变内存中内容，但内存中内容是否可修改是不一定的</strong>。（代码4的第5第6行要好好看）</p><p>原因是：常量指针不可以修改内存是因为不可以<strong>通过常量指针修改内存</strong>所致（你不通过常量指针的话，变量是否可以修改就不一定了），内存是否修改则是根据定义的情况了。</p><h1 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h1><h2 id="常量指针-2"><a href="#常量指针-2" class="headerlink" title="常量指针"></a>常量指针</h2><p>在这里指pointer to const。指针作用是常量性的，不可以通过它修改指向内存（容易被误会成内存一定不可修改）。</p><h2 id="指针常量-2"><a href="#指针常量-2" class="headerlink" title="指针常量"></a>指针常量</h2><p>英文里指const pointer。指针是一个常量，指针本身不可以被修改。</p><p>作者：<a href="https://chouxianyu.github.io/">@臭咸鱼</a></p><p>本文为作者原创，转载请注明出处：<a href="https://chouxianyu.github.io/2018/08/26/常量指针与指针常量/#more">https://chouxianyu.github.io/2018/08/26/常量指针与指针常量/#more</a></p><p>欢迎转发和评论</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;常量指针和指针常量是两个经常出现的概念，今天做个小小总结。&lt;/p&gt;
&lt;p&gt;文章各部分的内容都是很容易理解的，并且附加代码说明，一切的前提是理解&lt;strong&gt;文章2.1和2.2部分&lt;/strong&gt;，所以搞好基础再往后看呐。嫌长的直接跳到结论去。&lt;/p&gt;
&lt;h1 id=&quot;废
      
    
    </summary>
    
    
      <category term="c/c++" scheme="https://chouxianyu.github.io/tags/c-c/"/>
    
      <category term="指针" scheme="https://chouxianyu.github.io/tags/%E6%8C%87%E9%92%88/"/>
    
  </entry>
  
  <entry>
    <title>JAI丢包掉帧处理</title>
    <link href="https://chouxianyu.github.io/2018/08/22/JAI%E4%B8%A2%E5%8C%85%E6%8E%89%E5%B8%A7%E5%A4%84%E7%90%86/"/>
    <id>https://chouxianyu.github.io/2018/08/22/JAI丢包掉帧处理/</id>
    <published>2018-08-22T05:34:40.000Z</published>
    <updated>2018-08-23T03:13:13.494Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题：时间戳停止变化-图像停止更新"><a href="#问题：时间戳停止变化-图像停止更新" class="headerlink" title="问题：时间戳停止变化/图像停止更新"></a>问题：时间戳停止变化/图像停止更新</h1><h1 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h1><p>本小白刚刚接触JAI，有很多不懂的地方。这次遇到问题是请教了YZ大哥（不知道年龄，暂时这么称呼），很感谢YZ大哥的耐心指导。因为我不仅不知道怎么调，连在哪里调也不知道╭(╯^╰)╮。以下是此次问题解决步骤，是YZ大哥跟我说怎么做，然后我照做，过程中又遇到问题，下边也给出了碰到的问题以及相应的解决方法。（8.21更）</p><p>刚刚又看了下JAI SDK Getting Started Guide，发现YZ讲的方法就是文档里那部分我觉得可以先跳过的内容，出现问题应该也是因为我没有按照文档进行配置…..可能我写的这个会有错误、遗漏、表述模糊，具体操作还可参加文档说明（8.22更）</p><p><img src="https://i.loli.net/2018/08/22/5b7ced57146fe.jpg" alt="文档步骤_2018-08-22_10-08-38.jpg"></p><p>4.4=》设置接收缓冲区    4.5=》设置中断调整    4.6=》打开巨型帧    4.7=》计算和设置包延迟</p><h1 id="出现问题原因：图像传输时丢包（掉帧）"><a href="#出现问题原因：图像传输时丢包（掉帧）" class="headerlink" title="出现问题原因：图像传输时丢包（掉帧）"></a>出现问题原因：图像传输时丢包（掉帧）</h1><h1 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h1><h2 id="使用-JAI-Control-Tool-采集图像-防止丢包"><a href="#使用-JAI-Control-Tool-采集图像-防止丢包" class="headerlink" title="使用 JAI Control Tool 采集图像 防止丢包"></a>使用 JAI Control Tool 采集图像 防止丢包</h2><h3 id="如何使用JAI-Control-Tool-采集图像"><a href="#如何使用JAI-Control-Tool-采集图像" class="headerlink" title="如何使用JAI Control Tool 采集图像"></a>如何使用JAI Control Tool 采集图像</h3><p><img src="https://i.loli.net/2018/08/22/5b7ced5711c84.png" alt="如何采集图像_2018-08-22_12-17-37.png"></p><h3 id="如何查看是否丢包？"><a href="#如何查看是否丢包？" class="headerlink" title="如何查看是否丢包？"></a>如何查看是否丢包？</h3><p><img src="https://i.loli.net/2018/08/22/5b7ced5713cc5.png" alt="如何查看丢包1_2018-08-22_12-21-47.png"> <img src="https://i.loli.net/2018/08/22/5b7ced57138a1.png" alt="如何查看丢包2_2018-08-22_12-24-36.png"></p><p>除了通过搜索，也可以找到GigE Image Acquisition-Total missing packets<br>其实观察刚开始采集图像时图片是否有撕裂的情况（出现水平黑线）</p><h2 id="如果丢包-设置相机据包为8000左右（我是8196）"><a href="#如果丢包-设置相机据包为8000左右（我是8196）" class="headerlink" title="如果丢包 设置相机据包为8000左右（我是8196）"></a>如果丢包 设置相机据包为8000左右（我是8196）</h2><h3 id="如何设置相机数据包"><a href="#如何设置相机数据包" class="headerlink" title="如何设置相机数据包"></a>如何设置相机数据包</h3><p><img src="https://i.loli.net/2018/08/22/5b7ced571414e.png" alt="设置相机数据包大小_2018-08-22_12-48-27.png"></p><h2 id="设置相机数据包后用JAI-Control-Tool采图时黑屏，查看黑屏是是否有帧率"><a href="#设置相机数据包后用JAI-Control-Tool采图时黑屏，查看黑屏是是否有帧率" class="headerlink" title="设置相机数据包后用JAI Control Tool采图时黑屏，查看黑屏是是否有帧率"></a>设置相机数据包后用JAI Control Tool采图时黑屏，查看黑屏是是否有帧率</h2><h3 id="如何查看帧率"><a href="#如何查看帧率" class="headerlink" title="如何查看帧率"></a>如何查看帧率</h3><p><img src="https://i.loli.net/2018/08/22/5b7cef324a84b.png" alt="如何查看帧率_2018-08-22_12-50-05.png"></p><h2 id="有帧率则调整网卡巨型帧等"><a href="#有帧率则调整网卡巨型帧等" class="headerlink" title="有帧率则调整网卡巨型帧等"></a>有帧率则调整网卡巨型帧等</h2><h3 id="如何找到相机连接的网卡"><a href="#如何找到相机连接的网卡" class="headerlink" title="如何找到相机连接的网卡"></a>如何找到相机连接的网卡</h3><p>网络和共享中心-以太网（就是相机那条网线）-属性-由勾选EBUS设置为不勾选EBUS 同时可以看到连接时使用的网卡</p><p>找到网卡右击-属性-高级-巨型帧（由关闭设为9KB MTU）接收缓冲区设为最大（我的最大只有512，只能这样了）</p><p><img src="https://i.loli.net/2018/08/22/5b7ced57143c1.png" alt="多个网络适配器_2018-08-22_10-27-53.png"></p><p><img src="https://i.loli.net/2018/08/22/5b7cef324c87f.png" alt="连接的哪个网卡_2018-08-22_12-54-08.png"></p><p><img src="https://i.loli.net/2018/08/22/5b7ced571412e.png" alt="进入网卡属性_2018-08-22_10-30-09.png"></p><p><img src="https://i.loli.net/2018/08/22/5b7ced571406f.png" alt="巨型帧_2018-08-22_10-33-07.png"><br><strong>提醒：文档中指出当巨型帧打开的时候，相机数据包大小就可以大于1500bytes，但相机数据包必须小于巨型帧大小。</strong></p><p><img src="https://i.loli.net/2018/08/22/5b7ced57144fc.png" alt="中断调整_2018-08-22_10-33-32.png"></p><p><img src="https://i.loli.net/2018/08/22/5b7ced57144cf.png" alt="接收缓冲区_2018-08-22_10-32-30.png"></p><p><strong>提醒：文档中指出典型的接收缓冲区最大值为2048，标准默认值为256，请结合自己的实际情况</strong></p><p>是不是我的网卡太菜了，众筹给我买个好的可以吗？？？</p><h2 id="如果仍丢包则根据文档设置延时直至成功"><a href="#如果仍丢包则根据文档设置延时直至成功" class="headerlink" title="如果仍丢包则根据文档设置延时直至成功"></a>如果仍丢包则根据文档设置延时直至成功</h2><h3 id="如何设置延时？"><a href="#如何设置延时？" class="headerlink" title="如何设置延时？"></a>如何设置延时？</h3><p>参照文档设置延时（主要是帧率）我的Max Fps是2.00 ，Band Width是90%</p><p><img src="https://i.loli.net/2018/08/22/5b7cf09b8b686.png" alt="设置延迟1_2018-08-22_13-09-13.png"></p><p><img src="https://i.loli.net/2018/08/22/5b7cf09b7f5db.png" alt="设置延迟2_2018-08-22_13-10-54.png"></p><p>修改最大帧率，调整带宽，点击calculate，点击ok。（文档指出当数据包大小或者像素格式改变时，数据包延迟都需要重新计算）</p><p>最后查看是否丢包 如有丢包可以再次调整数据包大小和延迟。<br>另外有一点是，图像的传输是和你整个电脑的运行都有关系的，而不只是网卡和相机设置。</p><p>这是第一次记录bug，图片好像有点多或者说有点乱，下次可以尝试以文字为主！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;问题：时间戳停止变化-图像停止更新&quot;&gt;&lt;a href=&quot;#问题：时间戳停止变化-图像停止更新&quot; class=&quot;headerlink&quot; title=&quot;问题：时间戳停止变化/图像停止更新&quot;&gt;&lt;/a&gt;问题：时间戳停止变化/图像停止更新&lt;/h1&gt;&lt;h1 id=&quot;描述&quot;&gt;&lt;
      
    
    </summary>
    
    
      <category term="JAI" scheme="https://chouxianyu.github.io/tags/JAI/"/>
    
  </entry>
  
  <entry>
    <title>FirstWriting</title>
    <link href="https://chouxianyu.github.io/2018/08/16/FirstWriting/"/>
    <id>https://chouxianyu.github.io/2018/08/16/FirstWriting/</id>
    <published>2018-08-16T07:53:07.000Z</published>
    <updated>2018-08-16T09:33:27.467Z</updated>
    
    <content type="html"><![CDATA[<p><del>在很久很久以前，你拥有我我拥有你  《外面的世界》</del><br>在很久很久以前我就有搞一个类似博客的东西的想法，不过一直都没有尝试着搞……<br>某天（10号左右吧）刷知乎看到github和hexo可以搭建博客，于是我就来了hhh<br>不过搞的时候也遇到了好多bug，跳了好多坑…<br>博客一是分享，二是记录，三四五还没想起来。</p><p>这是第一次写博客，学习内容是一点点markdown语法，文末有这次学习的链接，之后应该会再好好学学markdown语法。</p><h1 id="字体设置"><a href="#字体设置" class="headerlink" title="字体设置"></a>字体设置</h1><p><em>斜体1：文字两侧各一个星号</em><br><em>斜体2：文字两侧各一个下划线</em><br><strong>粗体：文字两侧各两个星号</strong><br><strong><em>粗斜体：文字两侧各三个星号</em></strong><br><del>删除线：文字两侧各两个波浪号</del></p><p>那就有个疑问了，如果星号、波浪号、下划线出现在文字中怎么处理…或者说这种情况很少吧，并且对内容没什么影响</p><h1 id="标题怎么用"><a href="#标题怎么用" class="headerlink" title="标题怎么用"></a>标题怎么用</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><h1 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h1><p>行内形式：<a href="https://chouxianyu.github.io/">我的博客</a><br>参考形式：[我的博客][1],[github][2]<br>[1]:<a href="https://chouxianyu.github.io/">https://chouxianyu.github.io/</a><br>[2]:<a href="https://github.com/" target="_blank" rel="noopener">https://github.com/</a><br>自动链接：我的博客地址<a href="https://chouxianyu.github.io/">https://chouxianyu.github.io/</a></p><h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><h2 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h2><ul><li>无序列表项1</li></ul><ul><li>无序列表项2</li></ul><ul><li>无序列表项3</li></ul><h2 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h2><p>1.有序列表项1<br>2.有序列表项2<br>3.有序列表项3</p><h1 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h1><p><img src="/images/heizi.jpg" alt=""></p><h1 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h1><table><thead><tr><th>表头1</th><th style="text-align:left">表头2</th><th style="text-align:center">表头3</th><th style="text-align:right">表头4</th></tr></thead><tbody><tr><td>默认左对齐</td><td style="text-align:left">显式左对齐</td><td style="text-align:center">居中对齐</td><td style="text-align:right">右对齐</td></tr><tr><td>默认左对齐</td><td style="text-align:left">显式左对齐</td><td style="text-align:center">居中对齐</td><td style="text-align:right">右对齐</td></tr><tr><td>默认左对齐</td><td style="text-align:left">显式左对齐</td><td style="text-align:center">居中对齐</td><td style="text-align:right">右对齐</td></tr><tr><td>默认左对齐</td><td style="text-align:left">显式左对齐</td><td style="text-align:center">居中对齐</td><td style="text-align:right">右对齐</td></tr></tbody></table><h1 id="转载自https-www-jianshu-com-p-56d99a3049a5"><a href="#转载自https-www-jianshu-com-p-56d99a3049a5" class="headerlink" title="转载自https://www.jianshu.com/p/56d99a3049a5"></a>转载自<a href="https://www.jianshu.com/p/56d99a3049a5" target="_blank" rel="noopener">https://www.jianshu.com/p/56d99a3049a5</a></h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;del&gt;在很久很久以前，你拥有我我拥有你  《外面的世界》&lt;/del&gt;&lt;br&gt;在很久很久以前我就有搞一个类似博客的东西的想法，不过一直都没有尝试着搞……&lt;br&gt;某天（10号左右吧）刷知乎看到github和hexo可以搭建博客，于是我就来了hhh&lt;br&gt;不过搞的时候也遇到了
      
    
    </summary>
    
    
      <category term="hexo" scheme="https://chouxianyu.github.io/tags/hexo/"/>
    
      <category term="markdown" scheme="https://chouxianyu.github.io/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>MyHelloWorld</title>
    <link href="https://chouxianyu.github.io/2018/08/16/MyHelloWorld/"/>
    <id>https://chouxianyu.github.io/2018/08/16/MyHelloWorld/</id>
    <published>2018-08-16T02:48:13.000Z</published>
    <updated>2018-08-16T02:48:13.230Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://chouxianyu.github.io/2018/08/10/hello-world/"/>
    <id>https://chouxianyu.github.io/2018/08/10/hello-world/</id>
    <published>2018-08-10T12:24:19.691Z</published>
    <updated>2018-08-10T12:24:19.691Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
